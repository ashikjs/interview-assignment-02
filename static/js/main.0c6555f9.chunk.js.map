{"version":3,"sources":["data-store/actions/restaurant/index.ts","components/restaurant-finder/index.tsx","constant/debounce.ts","components/restaurant-item/index.tsx","components/restaurant-list/index.tsx","data-store/actions/location/index.ts","deserializ/restaurant/index.ts","share/services/restaurant/restaurant.service.ts","components/google-map/index.tsx","components/restaurant-details/index.tsx","pages/home/index.tsx","layout/header/index.tsx","layout/footer/index.tsx","App.tsx","reportWebVitals.ts","data-store/reducers/location/index.ts","data-store/reducers/restaurant/index.ts","data-store/reducers/index.ts","middleware/logger-middleware.ts","index.tsx","data-store/store/index.ts"],"names":["RestaurantActions","RestaurantFinder","props","dispatch","useDispatch","onChange","useCallback","func","delay","timer","self","args","arguments","clearTimeout","setTimeout","apply","debounce","e","onSearchRestaurant","target","value","className","type","size","onClick","SELECTED_RANDOM_RESTAURANT","payload","openRestaurantDetails","allowClear","placeholder","React","memo","Paragraph","Typography","RestaurantItem","restaurant","name","iconUrl","address","category","Item","Meta","avatar","src","shape","alt","title","ellipsis","description","SELECTED_RESTAURANT","RestaurantList","restaurants","useSelector","state","skey","filter","toLowerCase","indexOf","grid","gutter","xs","sm","md","lg","xl","xxl","itemLayout","dataSource","renderItem","index","style","marginBottom","LocationActions","RestaurantDeserialize","restaurantBackendData","id","geocode","details","contact","popularity","price","rating","distance","this","fsq_id","generateAddress","location","geocodes","main","categories","generateCategoryIconUrl","toFixed","loc","crossStreet","cross_street","locality","country","icon","prefix","suffix","a","process","URL","headers","Accept","axios","get","results","status","data","map","res","GoogleMapView","lat","lng","zoom","height","width","apiKey","useLoadScript","googleMapsApiKey","isLoaded","loadError","mapContainerStyle","center","position","Title","RestaurantDetails","selectedRestaurant","visible","onClose","placement","padding","latitude","longitude","level","Home","useState","showResDetails","setShowResDetails","searchKey","setSearchKey","showRestaurantDetails","searchRestaurantByName","sKey","onCloseRestaurantDetails","useEffect","UPDATE_LOCATION_GEOCODE","UPDATE_LOCATION_RADIUS","getRestaurant","then","RESTAURANT_LIST","catch","error","console","info","Header","Layout","AppHeader","Footer","AppFooter","textAlign","Content","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","radius","sort","limit","rootReducer","combineReducers","action","fromLocationActions","fromRestaurantActions","randomRIndex","Math","floor","random","length","loggerMiddleware","store","next","group","result","log","getState","groupEnd","middleware","applyMiddleware","thunkMiddleware","createStore","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c6555f9.chunk.js","sourcesContent":["import { Action } from 'redux-actions';\r\nimport { Restaurant } from '../../../models/restaurant';\r\n\r\nexport enum RestaurantActions {\r\n    RESTAURANT_LIST = '[RESTAURANT] List',\r\n    SELECTED_RANDOM_RESTAURANT = '[RESTAURANT] Random Selected',\r\n    SELECTED_RESTAURANT = '[RESTAURANT] Selected',\r\n}\r\n\r\nexport class RestaurantListType implements Action<Restaurant[]> {\r\n    readonly type = RestaurantActions.RESTAURANT_LIST;\r\n\r\n    constructor(public payload: Restaurant[]) {}\r\n}\r\n\r\nexport class SelectedRandomRestaurantType implements Action<any> {\r\n    readonly type = RestaurantActions.SELECTED_RANDOM_RESTAURANT;\r\n\r\n    constructor(public payload: any) {}\r\n}\r\n\r\nexport class SelectedRestaurantType implements Action<Restaurant> {\r\n    readonly type = RestaurantActions.SELECTED_RESTAURANT;\r\n\r\n    constructor(public payload: Restaurant) {}\r\n}\r\n\r\nexport type RestaurantActionTypes =\r\n    | RestaurantListType\r\n    | SelectedRandomRestaurantType\r\n    | SelectedRestaurantType;\r\n","import React, { useCallback } from 'react';\r\nimport { Button, Input } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// @Style\r\nimport './Restaurant-finder.scss';\r\n// @Action\r\nimport { RestaurantActions } from '../../data-store/actions/restaurant';\r\n// Constant\r\nimport { debounce } from '../../constant/debounce';\r\n\r\nfunction RestaurantFinder(props: any) {\r\n    const dispatch = useDispatch();\r\n    const getRandomRestaurant = () => {\r\n        dispatch({ type: RestaurantActions.SELECTED_RANDOM_RESTAURANT, payload: '' });\r\n        props.openRestaurantDetails();\r\n    };\r\n    const onChange = useCallback(\r\n        debounce((e: any): any => props.onSearchRestaurant(e.target.value), 600),\r\n        []\r\n    );\r\n    return (\r\n        <section>\r\n            <div className=\"restaurant-finder\">\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    onClick={getRandomRestaurant}\r\n                    data-testid=\"randomRestaurant\"\r\n                >\r\n                    Pick a Random Restaurant\r\n                </Button>\r\n                <span className=\"alter-text\">Or</span>\r\n                <Input\r\n                    allowClear\r\n                    onChange={onChange}\r\n                    placeholder=\"Search by name or category\"\r\n                    size=\"large\"\r\n                />\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default React.memo(RestaurantFinder);\r\n","export const debounce = (func: any, delay: number) => {\r\n    let timer: any;\r\n    const self = this;\r\n    return function () {\r\n        const args: any = arguments;\r\n        clearTimeout(timer);\r\n        timer = setTimeout(() => {\r\n            func.apply(self, args);\r\n        }, delay);\r\n    };\r\n};\r\n","import React from 'react';\r\nimport { Avatar, Button, List, Typography } from 'antd';\r\nconst { Paragraph } = Typography;\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// @Style\r\nimport './Restaurant-item.scss';\r\n\r\n// @Component\r\nimport { RestaurantActions } from '../../data-store/actions/restaurant';\r\n\r\nexport const RestaurantItem = (props: any) => {\r\n    const dispatch = useDispatch();\r\n    let { name, iconUrl, address, category } = props?.restaurant;\r\n\r\n    const openRestaurantDetails = () => {\r\n        props.openRestaurantDetails();\r\n        dispatch({ type: RestaurantActions.SELECTED_RESTAURANT, payload: props?.restaurant });\r\n    };\r\n\r\n    return (\r\n        <List.Item.Meta\r\n            className=\"restaurant-item\"\r\n            avatar={<Avatar src={iconUrl} size={80} shape=\"square\" alt={category} />}\r\n            title={<Paragraph ellipsis={true}>{name}</Paragraph>}\r\n            description={\r\n                <>\r\n                    <Paragraph ellipsis={true}>{address}</Paragraph>\r\n                    <Button type=\"primary\" size={'small'} onClick={openRestaurantDetails}>\r\n                        Details\r\n                    </Button>\r\n                </>\r\n            }\r\n        />\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { List } from 'antd';\r\n\r\n// @Component\r\nimport { RestaurantItem } from '../restaurant-item';\r\n\r\n// @Model\r\nimport { Restaurant } from '../../models/restaurant';\r\n\r\nfunction RestaurantList(props: any) {\r\n    let restaurants: Restaurant[];\r\n    restaurants = useSelector((state: any) => state?.restaurant?.restaurants);\r\n    if (props.skey) {\r\n        restaurants = restaurants.filter(\r\n            (restaurant) =>\r\n                restaurant.name?.toLowerCase().indexOf(props.skey.toLowerCase()) !== -1 ||\r\n                restaurant.category?.toLowerCase().indexOf(props.skey.toLowerCase()) !== -1\r\n        );\r\n    }\r\n    return (\r\n        <section>\r\n            <List\r\n                grid={{ gutter: 30, xs: 1, sm: 1, md: 2, lg: 2, xl: 3, xxl: 3 }}\r\n                itemLayout=\"vertical\"\r\n                dataSource={restaurants}\r\n                renderItem={(restaurant, index) => (\r\n                    <List.Item key={index} style={{ marginBottom: '30px' }}>\r\n                        <RestaurantItem\r\n                            restaurant={restaurant}\r\n                            openRestaurantDetails={props.openRestaurantDetails}\r\n                        />\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default React.memo(RestaurantList);\r\n","import { Action } from 'redux-actions';\r\nimport { Geocode } from '../../../models/location';\r\n\r\nexport enum LocationActions {\r\n    UPDATE_LOCATION_GEOCODE = '[LOCATION] Update Geocode',\r\n    UPDATE_LOCATION_RADIUS = '[LOCATION] Update Radius',\r\n}\r\n\r\nexport class UpdateLocationGeocodeType implements Action<Geocode> {\r\n    readonly type = LocationActions.UPDATE_LOCATION_GEOCODE;\r\n\r\n    constructor(public payload: Geocode) {}\r\n}\r\n\r\nexport class UpdateLocationRadiusType implements Action<number> {\r\n    readonly type = LocationActions.UPDATE_LOCATION_RADIUS;\r\n\r\n    constructor(public payload: number) {}\r\n}\r\n\r\nexport type LocationActionTypes = UpdateLocationRadiusType | UpdateLocationGeocodeType;\r\n","import { Restaurant } from '../../models/restaurant';\r\nimport { Geocode } from '../../models/location';\r\n\r\nexport class RestaurantDeserialize implements Restaurant {\r\n    id: string;\r\n\r\n    name: string;\r\n\r\n    address: string;\r\n\r\n    iconUrl: string;\r\n\r\n    geocode: Geocode;\r\n\r\n    details?: string;\r\n\r\n    category: string;\r\n\r\n    contact?: string;\r\n\r\n    popularity?: string;\r\n\r\n    price?: string;\r\n\r\n    rating?: string;\r\n\r\n    distance?: string;\r\n\r\n    constructor(restaurantBackendData: any) {\r\n        this.id = restaurantBackendData.fsq_id;\r\n        this.name = restaurantBackendData.name;\r\n        this.address = this.generateAddress(restaurantBackendData.location);\r\n        this.geocode = restaurantBackendData.geocodes.main;\r\n        this.iconUrl = restaurantBackendData.categories[0]\r\n            ? this.generateCategoryIconUrl(restaurantBackendData.categories[0])\r\n            : '';\r\n        this.distance = (restaurantBackendData.distance / 1000).toFixed(2);\r\n        this.category = restaurantBackendData.categories[0]\r\n            ? restaurantBackendData.categories[0].name\r\n            : null;\r\n    }\r\n\r\n    private generateAddress(loc: any): string {\r\n        const crossStreet = loc.cross_street ? ' ' + loc.cross_street : '';\r\n        const locality = loc.locality ? ' ' + loc.locality : '';\r\n        return loc?.address ? loc?.address : loc.country + crossStreet + locality;\r\n    }\r\n\r\n    private generateCategoryIconUrl(category: any): string {\r\n        return category.icon.prefix + '120' + category.icon.suffix;\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport { RestaurantDeserialize } from '../../../deserializ/restaurant';\r\n\r\nexport async function getRestaurant() {\r\n    const locationApi = process.env.REACT_APP_LOCATION_API;\r\n\r\n    const URL = `${locationApi}/restaurants`;\r\n\r\n    const headers = {\r\n        Accept: 'application/json',\r\n    };\r\n\r\n    const results = await axios.get(URL, { headers });\r\n\r\n    if (results.status === 200)\r\n        return results.data?.map((res: any) => new RestaurantDeserialize(res));\r\n\r\n    return null;\r\n}\r\n","import React from 'react';\r\nimport { GoogleMap, Marker, useLoadScript } from '@react-google-maps/api';\r\n\r\nfunction GoogleMapView(props: any) {\r\n    const { lat, lng, zoom, height = '260px', width = '100%' } = props;\r\n    const apiKey = process.env.REACT_APP_MAP_API_KEY;\r\n\r\n    const { isLoaded, loadError } = useLoadScript({\r\n        googleMapsApiKey: apiKey ? apiKey : '',\r\n    });\r\n    const renderMap = () => {\r\n        return (\r\n            <GoogleMap mapContainerStyle={{ height, width }} center={{ lat, lng }} zoom={zoom}>\r\n                <Marker position={{ lat, lng }} />\r\n            </GoogleMap>\r\n        );\r\n    };\r\n\r\n    if (loadError) {\r\n        return <div>Map cannot be loaded right now, sorry.</div>;\r\n    }\r\n\r\n    return isLoaded ? renderMap() : <p>Loading...</p>;\r\n}\r\n\r\nexport default React.memo(GoogleMapView);\r\n","import React from 'react';\r\nimport { Avatar, Typography, Space, Drawer } from 'antd';\r\n\r\nimport './restaurant-details.scss';\r\n\r\nimport GoogleMapView from '../google-map';\r\nimport { useSelector } from 'react-redux';\r\nimport { Restaurant } from '../../models/restaurant';\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction RestaurantDetails(props: any) {\r\n    const mapZoomLevel: number = 16;\r\n    const restaurant: Restaurant = useSelector((state: any) => state.restaurant.selectedRestaurant);\r\n\r\n    const { visible, onClose } = props;\r\n    const {\r\n        name,\r\n        category,\r\n        geocode,\r\n        address,\r\n        popularity,\r\n        price,\r\n        rating,\r\n        iconUrl,\r\n        distance,\r\n        details,\r\n    } = restaurant;\r\n    return (\r\n        <Drawer\r\n            className={'restaurant-details-drawer'}\r\n            title={`Restaurant details`}\r\n            placement=\"right\"\r\n            width={600}\r\n            onClose={onClose}\r\n            visible={visible}\r\n            style={{ padding: 0 }}\r\n        >\r\n            <div className=\"map-wrapper\">\r\n                <GoogleMapView lat={geocode.latitude} lng={geocode.longitude} zoom={mapZoomLevel} />\r\n            </div>\r\n            <div className=\"restaurant-details\">\r\n                <Title level={2}>{name}</Title>\r\n                <Title level={5}>{address}</Title>\r\n                {!!details && <p>{details}</p>}\r\n                <Space size={10} className=\"categories\">\r\n                    <Avatar src={iconUrl} alt={category} />\r\n                    <span>{category}</span>\r\n                </Space>\r\n\r\n                <ul>\r\n                    {!!distance && (\r\n                        <li>\r\n                            <b>Distance:</b> {distance}Km\r\n                        </li>\r\n                    )}\r\n                    {!!popularity && (\r\n                        <li>\r\n                            <b>Popularity:</b> {popularity}\r\n                        </li>\r\n                    )}\r\n                    {!!price && (\r\n                        <li>\r\n                            <b>Price:</b> {price}\r\n                        </li>\r\n                    )}\r\n                    {!!rating && (\r\n                        <li>\r\n                            <b>Rating:</b> {rating}\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </Drawer>\r\n    );\r\n}\r\n\r\nexport default React.memo(RestaurantDetails);\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// @Components\r\nimport RestaurantFinder from '../../components/restaurant-finder';\r\nimport RestaurantList from '../../components/restaurant-list';\r\n\r\n// @Action\r\nimport { LocationActions } from '../../data-store/actions/location';\r\nimport { RestaurantActions } from '../../data-store/actions/restaurant';\r\n\r\n// @Model\r\nimport { Restaurant } from '../../models/restaurant';\r\n\r\n// @Service\r\nimport { getRestaurant } from '../../share/services/restaurant';\r\nimport RestaurantDetails from '../../components/restaurant-details';\r\n\r\nconst radius = 300;\r\nconst geocode = {\r\n    latitude: 23.7815271,\r\n    longitude: 90.3982979,\r\n};\r\n\r\nfunction Home() {\r\n    const dispatch = useDispatch();\r\n    const [showResDetails, setShowResDetails] = useState(false);\r\n    const [searchKey, setSearchKey] = useState(false);\r\n    const showRestaurantDetails = useCallback(() => {\r\n        setShowResDetails(true);\r\n    }, []);\r\n    const searchRestaurantByName = useCallback((sKey: any) => {\r\n        setSearchKey(sKey);\r\n    }, []);\r\n    const onCloseRestaurantDetails = useCallback(() => {\r\n        setShowResDetails(false);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: LocationActions.UPDATE_LOCATION_GEOCODE, payload: geocode });\r\n        dispatch({ type: LocationActions.UPDATE_LOCATION_RADIUS, payload: radius });\r\n\r\n        function getAllRestaurants() {\r\n            getRestaurant()\r\n                .then((restaurants: Restaurant[]) => {\r\n                    dispatch({ type: RestaurantActions.RESTAURANT_LIST, payload: restaurants });\r\n                })\r\n                .catch((error) => {\r\n                    console.info(error);\r\n                });\r\n        }\r\n        getAllRestaurants();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"Home wrapper-container\">\r\n            <RestaurantFinder\r\n                openRestaurantDetails={showRestaurantDetails}\r\n                onSearchRestaurant={searchRestaurantByName}\r\n            />\r\n            <RestaurantList openRestaurantDetails={showRestaurantDetails} skey={searchKey} />\r\n            {showResDetails ? (\r\n                <RestaurantDetails visible={showResDetails} onClose={onCloseRestaurantDetails} />\r\n            ) : (\r\n                ''\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nimport './header.scss';\r\n\r\nconst { Header } = Layout;\r\n\r\nfunction AppHeader() {\r\n    return (\r\n        <Header>\r\n            <div className=\"logo\">\r\n                <img src=\"images/logo.png\" className=\"App-logo\" alt=\"logo\" />\r\n            </div>\r\n        </Header>\r\n    );\r\n}\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nconst { Footer } = Layout;\r\n\r\nfunction AppFooter() {\r\n    return <Footer style={{ textAlign: 'center' }}>© 2021 Today All Rights Reserved</Footer>;\r\n}\r\n\r\nexport default AppFooter;\r\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nimport './App.scss';\r\nimport Home from './pages/home';\r\nimport AppHeader from './layout/header';\r\nimport AppFooter from './layout/footer';\r\nconst { Content } = Layout;\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Layout className=\"layout\">\r\n                <AppHeader />\r\n                <Content>\r\n                    <div className=\"site-layout-content\">\r\n                        <Home />\r\n                    </div>\r\n                </Content>\r\n                <AppFooter />\r\n            </Layout>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { LocationConfiguration } from '../../../models/location';\r\nimport * as fromLocationActions from '../../actions/location';\r\n\r\nconst initialState: LocationConfiguration = {\r\n    geocode: {\r\n        latitude: 0,\r\n        longitude: 0,\r\n    },\r\n    radius: 0,\r\n    categories: 13000,\r\n    sort: 'RELEVANCE',\r\n    limit: 50,\r\n};\r\n\r\nexport default function locationReducer(\r\n    state: LocationConfiguration = initialState,\r\n    action: fromLocationActions.LocationActionTypes\r\n) {\r\n    switch (action.type) {\r\n        case fromLocationActions.LocationActions.UPDATE_LOCATION_GEOCODE: {\r\n            return {\r\n                ...state,\r\n                geocode: action.payload,\r\n            };\r\n        }\r\n        case fromLocationActions.LocationActions.UPDATE_LOCATION_RADIUS: {\r\n            return {\r\n                ...state,\r\n                radius: action.payload,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as fromRestaurantActions from '../../actions/restaurant';\r\nimport { RestaurantState } from '../../../models/restaurant';\r\n\r\nconst initialState: RestaurantState = {\r\n    restaurants: [],\r\n    selectedRestaurant: null,\r\n};\r\n\r\nexport default function restaurantReducer(\r\n    state: RestaurantState = initialState,\r\n    action: fromRestaurantActions.RestaurantActionTypes\r\n) {\r\n    switch (action.type) {\r\n        case fromRestaurantActions.RestaurantActions.RESTAURANT_LIST: {\r\n            return {\r\n                ...state,\r\n                restaurants: action.payload,\r\n            };\r\n        }\r\n        case fromRestaurantActions.RestaurantActions.SELECTED_RANDOM_RESTAURANT: {\r\n            const randomRIndex = Math.floor(Math.random() * state.restaurants.length);\r\n\r\n            return {\r\n                ...state,\r\n                selectedRestaurant: state.restaurants[randomRIndex],\r\n            };\r\n        }\r\n        case fromRestaurantActions.RestaurantActions.SELECTED_RESTAURANT: {\r\n            return {\r\n                ...state,\r\n                selectedRestaurant: action.payload,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport locationReducer from './location';\r\nimport restaurantReducer from './restaurant';\r\n\r\nconst rootReducer = combineReducers<any>({\r\n    location: locationReducer,\r\n    restaurant: restaurantReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { Middleware } from 'redux';\r\n\r\nexport const loggerMiddleware: Middleware = (store) => (next) => (action) => {\r\n    console.group(action.type);\r\n    console.info('dispatching', action);\r\n    let result = next(action);\r\n    console.log('next state', store.getState());\r\n    console.groupEnd();\r\n    return result;\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport configureStore from './data-store/store';\r\n\r\nimport './index.less';\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport rootReducer from '../reducers';\r\nimport { loggerMiddleware } from '../../middleware';\r\n\r\nexport default function configureStore(initialState?: any) {\r\n    const middleware = applyMiddleware(loggerMiddleware, thunkMiddleware);\r\n\r\n    const store = createStore(rootReducer as any, initialState as any, middleware);\r\n\r\n    return store;\r\n}\r\n"],"sourceRoot":""}